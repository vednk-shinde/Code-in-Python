import random
import string
from getpass import getpass

class PasswordAnalyzer:
    def __init__(self):
        self.common_passwords = {'password', '123456', 'qwerty', 'letmein'}
        self.colors = {
            'weak': '\033[91m',      # Red
            'medium': '\033[93m',    # Yellow
            'strong': '\033[92m',    # Green
            'reset': '\033[0m'       # Reset color
        }
    
    def analyze(self, password):
        strength = 0
        feedback = []
        
        # Length check
        if len(password) >= 12:
            strength += 2
        elif len(password) >= 8:
            strength += 1
        else:
            feedback.append("Password should be at least 8 characters")
        
        # Character diversity checks
        checks = {
            'uppercase': any(c.isupper() for c in password),
            'lowercase': any(c.islower() for c in password),
            'digit': any(c.isdigit() for c in password),
            'special': any(not c.isalnum() for c in password)
        }
        
        for name, passed in checks.items():
            if passed:
                strength += 1
            else:
                feedback.append(f"Missing {name} characters")
        
        # Common password check
        if password.lower() in self.common_passwords:
            strength = 0
            feedback.append("Password is too common")
        
        # Visual strength meter
        meter = f"{'█' * strength}{'░' * (6 - strength)}"
        color = self.colors['strong'] if strength >= 5 else (
            self.colors['medium'] if strength >= 3 else self.colors['weak'])
        
        print(f"\nStrength: {color}{meter} {strength}/6{self.colors['reset']}")
        
        if feedback:
            print("\nTo improve your password:")
            for item in feedback:
                print(f"- {item}")
    
    def generate_strong(self, length=12):
        chars = string.ascii_letters + string.digits + "!@#$%^&*"
        return ''.join(random.choice(chars) for _ in range(length))

def main():
    analyzer = PasswordAnalyzer()
    print("=== Password Strength Analyzer ===")
    
    while True:
        choice = input("\n1. Check password\n2. Generate strong password\n3. Exit\n> ")
        
        if choice == '1':
            password = getpass("Enter password: ")
            analyzer.analyze(password)
        elif choice == '2':
            length = int(input("Password length (default 12): ") or 12)
            new_pass = analyzer.generate_strong(length)
            print(f"\nGenerated password: \033[94m{new_pass}\033[0m")
            analyzer.analyze(new_pass)
        elif choice == '3':
            print("Goodbye!")
            break
        else:
            print("Invalid choice")

if __name__ == "__main__":
    main()
