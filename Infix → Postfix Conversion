def infix_to_postfix(expression):
    precedence = {'+':1, '-':1, '*':2, '/':2, '^':3}
    stack = []
    result = []

    for ch in expression:
        if ch.isalnum():   # operand (numbers/variables)
            result.append(ch)
        elif ch == '(':
            stack.append(ch)
        elif ch == ')':
            while stack and stack[-1] != '(':
                result.append(stack.pop())
            stack.pop()
        else:  # operator
            while stack and stack[-1] != '(' and precedence[ch] <= precedence[stack[-1]]:
                result.append(stack.pop())
            stack.append(ch)

    while stack:
        result.append(stack.pop())

    return "".join(result)
